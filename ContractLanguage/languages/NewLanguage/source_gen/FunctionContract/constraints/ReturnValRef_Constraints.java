package FunctionContract.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SReferenceLinkId;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.base.BaseScopeProvider;

public class ReturnValRef_Constraints extends BaseConstraintsDescriptor {
  public ReturnValRef_Constraints() {
    super(MetaIdFactory.conceptId(0x902ada2bdddc4d40L, 0x9436e13ab6ba878dL, 0x4c32bfaf1c6d4114L));
  }
  @Override
  protected Map<SReferenceLinkId, ReferenceConstraintsDescriptor> getNotDefaultSReferenceLinks() {
    Map<SReferenceLinkId, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLinkId, ReferenceConstraintsDescriptor>();
    references.put(MetaIdFactory.refId(0x902ada2bdddc4d40L, 0x9436e13ab6ba878dL, 0x4c32bfaf1c6d4114L, 0x4c32bfaf1c6d429aL), new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x902ada2bdddc4d40L, 0x9436e13ab6ba878dL, 0x4c32bfaf1c6d4114L, 0x4c32bfaf1c6d429aL), this) {
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseScopeProvider() {};
      }
    });
    return references;
  }
}
